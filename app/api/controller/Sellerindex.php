<?php

namespace app\api\controller;
/**
 * ============================================================================
 * DSKMS多用户商城
 * ============================================================================
 * 版权所有 2014-2028 长沙德尚网络科技有限公司，并保留所有权利。
 * 网站地址: http://www.csdeshang.com
 * ----------------------------------------------------------------------------
 * 这不是一个自由软件！您只能在不用于商业目的的前提下对程序代码进行修改和使用 .
 * 不允许对程序代码以任何形式任何目的的再发布。
 * ============================================================================
 * 卖家中心控制器
 */
class  Sellerindex extends MobileSeller {

    public function initialize() {
        parent::initialize(); // TODO: Change the autogenerated stub
    }


    /**
     * @api {POST} api/Sellerindex/index 商家中心
     * @apiVersion 1.0.0
     * @apiGroup Sellerindex
     *
     * @apiHeader {String} X-DS-KEY 卖家授权token
     * 
     * @apiSuccess {String} code 返回码,10000为成功
     * @apiSuccess {String} message  返回消息
     * @apiSuccess {Object} result  返回数据
     * @apiSuccess {Object} result.seller_info  卖家信息
     * @apiSuccess {Int} result.seller_info.goods_lockup  违规商品数
     * @apiSuccess {Int} result.seller_info.goods_offline  下架商品数
     * @apiSuccess {Int} result.seller_info.goods_online  上架商品数
     * @apiSuccess {Int} result.seller_info.is_admin  是否主账号 0否1是
     * @apiSuccess {Int} result.seller_info.last_logintime  上次登录时间
     * @apiSuccess {Int} result.seller_info.last_logintime_fmt  上次登录时间描述
     * @apiSuccess {Int} result.seller_info.member_id  用户ID
     * @apiSuccess {Int} result.seller_info.order_nopay_count  待付款订单数
     * @apiSuccess {Int} result.seller_info.order_noreceipt_count  待收货订单数
     * @apiSuccess {Int} result.seller_info.order_noship_count  待发货订单数
     * @apiSuccess {Int} result.seller_info.seller_id  卖家账号ID
     * @apiSuccess {Int} result.seller_info.seller_name  卖家账号名称
     * @apiSuccess {Int} result.seller_info.sellergroup_id  卖家账号组
     * @apiSuccess {Int} result.seller_info.store_id  店铺ID
     * @apiSuccess {Object} result.statics  统计信息
     * @apiSuccess {Int} result.statics.complain  投诉数
     * @apiSuccess {Int} result.statics.consult  咨询数
     * @apiSuccess {Int} result.statics.delivery  待发货订单数
     * @apiSuccess {Int} result.statics.goodscount  商品数
     * @apiSuccess {Int} result.statics.imagecount  图片数
     * @apiSuccess {Int} result.statics.lockup  违商品规数
     * @apiSuccess {Int} result.statics.offline  下架商品数
     * @apiSuccess {Int} result.statics.online  上架商品数
     * @apiSuccess {Int} result.statics.payment  已付款订单数
     * @apiSuccess {Int} result.statics.progressing  交易中订单数
     * @apiSuccess {Int} result.statics.refund  退款数
     * @apiSuccess {Int} result.statics.refund_lock  退款中数
     * @apiSuccess {Int} result.statics.return  退货数
     * @apiSuccess {Int} result.statics.return_lock  退货中数
     * @apiSuccess {Int} result.statics.verifyfail  审核失败商品数
     * @apiSuccess {Int} result.statics.waitverify  等待审核商品数
     * @apiSuccess {Object} result.store_info  店铺信息 （返回字段参考store表）
     * @apiSuccess {Object} result.store_info.daily_sales 今日销量
     * @apiSuccess {Float} result.store_info.daily_sales.orderamount 订单金额
     * @apiSuccess {Int} result.store_info.daily_sales.ordernum 订单量
     * @apiSuccess {Int} result.store_info.goods_count 商品数量
     * @apiSuccess {Int} result.store_info.grade_albumlimit 商品图片限制，0不限制
     * @apiSuccess {Int} result.store_info.grade_goodslimit 商品数量限制，0不限制
     * @apiSuccess {Int} result.store_info.grade_id 店铺等级
     * @apiSuccess {Int} result.store_info.grade_name 店铺等级名称
     * @apiSuccess {Object} result.store_info.monthly_sales 月销量
     * @apiSuccess {Float} result.store_info.monthly_sales.orderamount 订单金额
     * @apiSuccess {Int} result.store_info.monthly_sales.ordernum 订单量
     */
    public function index() {
        $seller_info = array();
        $seller_info = $this->seller_info;
        $store_info = $this->store_info;

        //最后登陆
        $seller_info['last_logintime_fmt'] = date('Y-m-d H:i:s', $seller_info['last_logintime']);
        $vrorder_model = model('vrorder');
        $condition = array(
            'store_id'=>$store_info['store_id'],
            'order_state'=>ORDER_STATE_NEW
        );
        // 待付款
        $seller_info['order_nopay_count'] = $vrorder_model->getVrorderCount($condition);
        // 已付款（可退款）
        $condition = array(
            array('store_id','=',$store_info['store_id']),
            array('order_state','=',ORDER_STATE_SUCCESS),
            array('payment_time','>',TIMESTAMP-60 * 60 * 24 * intval(config('ds_config.order_refund_time')))
        );
        $seller_info['order_success_count'] = $vrorder_model->getVrorderCount($condition);
        // 待评价
        $condition = array(
            'store_id'=>$store_info['store_id'],
            'order_state'=>ORDER_STATE_SUCCESS,
            'evaluation_state'=>0,
        );
        $seller_info['order_noeval_count'] = intval($vrorder_model->getVrorderCount($condition));
       
        $goods_model = model('goods');
        // 出售中的商品
        $seller_info['goods_online'] = $goods_model->getGoodsOnlineCount(array(array('store_id','=',$store_info['store_id'])));
        // 仓库待上架的商品
        $seller_info['goods_offline'] = $goods_model->getGoodsOfflineCount(array(array('store_id','=',$store_info['store_id'])));
        // 违规下架的商品
        $seller_info['goods_lockup'] = $goods_model->getGoodsLockUpCount(array(array('store_id','=',$store_info['store_id'])));
        
        //机构头像
        $store_info['store_avatar'] = get_store_logo($store_info['store_avatar'], 'store_avatar');
        
        //机构标志
        $store_info['store_logo'] = get_store_logo($store_info['store_logo'], 'store_logo');

        //等级信息
        $store_info['grade_name'] = $this->store_grade['storegrade_name'];
        //商品数量限制
        $store_info['grade_goodslimit'] = $this->store_grade['storegrade_goods_limit'];
        //图片空间数量限制
        $store_info['grade_albumlimit'] = $this->store_grade['storegrade_album_limit'];

        ds_json_encode(10000, '',array('seller_info' => $seller_info, 'store_info' => $store_info));
    }

    public function logout() {
        $condition = array();
        $condition[] = array('platform_userid', '=', $this->seller_info['seller_id']);
        $condition[] = array('platform_token', '=', $this->seller_info['seller_token']);
        $condition[] = array('platform_type', '=', 'seller');

        $result = model('platformtoken')->delPlatformtoken($condition);
        if (!$result) {
            ds_json_encode(10001, '退出失败');
        }
        ds_json_encode(10000, '退出成功',);
    }
}

?>
